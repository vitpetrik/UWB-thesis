# Kalman filters

Kalman filters are a powerful mathematical technique used for estimating the state of a system from noisy measurements.
Originally developed by Rudolf Kalman in 1960 [@10.1115/1.3662552], Kalman filters have become widely used in a variety of fields, including engineering, finance, and robotics.
The Kalman filter is an optimal estimator, meaning that it provides the best estimate of the system state given the available measurements and knowledge of the system dynamics.
The filter uses a state-space model of the system to predict the evolution of the system over time and to address measurement errors. 
The Kalman filter is particularly useful in applications where measurements are noisy or incomplete, or where the system dynamics are complex or difficult to model. 
In this way, the Kalman filter is an essential tool for many real-world applications that require accurate state estimation and control.

The algorithm involves two steps: prediction and update. 
The prediction step uses the previous state estimate and the dynamic model of the system to predict its current state and its uncertainty.
The update step uses an obtained measurement and the measurement model of the system to correct the predicted state estimate and its uncertainty using a weighted average.
The weight is determined by the Kalman gain, which balances the trust between the prediction and the measurement.
The Kalman gain is computed based on the covariance matrices of the prediction error and the measurement error.
The prediction and update steps are performed recursively for each new measurement.

The linear kalman filter assumes that the system and the measurement models are linear and can be represented by matrices.
The extended kalman filter extends the linear kalman filter to handle nonlinear systems by linearizing them around the current estimate using Taylor series expansion.
The unscented kalman filter improves the extended kalman filter by using a set of sigma points to capture the mean and covariance of the nonlinear system without requiring linearization or Jacobian matrices [@9117536] [@1336492].
The unscented kalman filter is more accurate and robust than the extended kalman filter, especially for highly nonlinear systems [@1336492] [@882463].

## Linear Kalman filter

A linear Kalman filter is a recursive algorithm that uses the Bode-Shannon representation of random processes and the state-transition method of analysis of dynamic systems to estimate the state of a system from noisy measurements. 
In the prediction step @eq-lkf-predict, the algorithm uses a state transition matrix to project the current state and its covariance matrix to the next time step. 

$$
\begin{aligned}
    \textit{Predict step} \\
    \hline
    \mathbf{\hat{x}} &= \mathbf{F x + Bu} \\
    \mathbf{\hat{P}} &= \mathbf{F P F^{T} + Q}
\end{aligned}
$$ {#eq-lkf-predict}
Where:
$$
\begin{aligned}
    \mathbf{\hat{x}}, \mathbf{\hat{P}} &= \text{State mean and covariance} \\
    \mathbf{F} &= \text{Transition matrix} \\
    \mathbf{Q} &= \text{Process matrix} \\
    \mathbf{B, u} &= \text{Input to the system} 
\end{aligned}
$$

In the correction step @eq-lkf-update, the algorithm uses a measurement matrix to update the predicted state and its covariance matrix with the new measurement.
The algorithm optimizes the estimation by minimizing the mean squared error between the true state and the estimated state [@10.1115/1.3662552].

$$
\begin{aligned}
    \textit{Update step} \\
    \hline
    \mathbf{y} &= \mathbf{z - H x} \\
    \mathbf{K} &= \mathbf{P H^T (H P H^T + R)^{-1}} \\
    \mathbf{\hat{x}} &= \mathbf{x + K y} \\
    \mathbf{\hat{P}} &= \mathbf{(I - K H)P} \\
\end{aligned}
$$ {#eq-lkf-update}
Where:
$$
\begin{aligned}
    \mathbf{z}, \mathbf{R} &= \text{Measurement and convariance} \\
    \mathbf{H} &= \text{Measurement function} \\
\end{aligned}
$$

## Unscented Kalman filter

The unscented Kalman filter (UKF) is a technique for nonlinear estimation that uses a deterministic sampling approach to propagate a Gaussian random variable through the system dynamics [@882463]. 
The UKF employs the unscented transform (UT), which generates a set of sample points that capture the mean and covariance of the original distribution. 

The unscented transform is a technique for approximating the outcome of applying a nonlinear function to a probability distribution that is described by a mean and a covariance matrix. It does this by choosing a set of points, known as sigma points Figure @fig-sigma-points.

![Comparsion between sampling, EKF and sigma points. [@merwe]](images/ukf_compare.pdf){#fig-sigma-points width="90%"}

Merwe describes generating the sigma points in paper \textit{The unscented Kalman filter for nonlinear estimation}[@882463]. These sigma points are chosen to capture the mean and covariance of the current estimated state, and they are transformed through the nonlinear model to predict the state at the next time step. The sigma points $\mathbfcal{X}_i$ as well as weights $\omega_i$ for each point are calculated using equation @eq-sigma-points. The weights $\omega_i$ must follow equation $\sum_{i=0}^{2L} \omega_i = 1$.
\pagebreak
$$
\lambda = \alpha^2 (L + \kappa) - L
$$
$$
\begin{aligned}
    \mathbfcal{X_0} &= \hat{x}   &  \omega^{m}_0 &= \frac{\lambda}{L + \lambda} & i &= 0  \\
    \mathbfcal{X_i} &= \hat{x} + \left( \sqrt{(L+\lambda) \mathbf{P_x}} \right)_i   &  \omega^{c}_i &= \frac{1}{2(L + \lambda)} + (1 âˆ’ \alpha^2 + \beta) & i &= 1,..., L \\
    \mathbfcal{X_i} &= \hat{x} - \left( \sqrt{(L+\lambda) \mathbf{P_x}} \right)_i & \omega^{m}_i &= \omega^{c}_i = \frac{1}{2(L +\lambda)} & i &= L+1,...,2L
\end{aligned}
$$ {#eq-sigma-points}
Where:
\begin{gather*}
\begin{align*}
    \mathbf{\hat{x}}, \mathbf{P_x} &= \text{State vector and covariance} \\
    L &= \text{Dimension of state vector}
\end{align*}
\\
0 \leq \alpha \leq 1 \\
0 \leq \kappa \\
0 \leq \beta
\end{gather*}

The sigma points are used both in predict step @eq-ukf-predict and update step  @eq-ukf-update and need to be regenerated for each new measurement. Instead of matrix $\mathbf{F}$ [@eq-lkf-predict] and $\mathbf{H}$ [@eq-lkf-update] known from LKF, the UKF is provided with nonlinear functions $\mathbf{f(} \mathbfcal{X} \mathbf{)}$ and $\mathbf{h(} \mathbfcal{X} \mathbf{)}$. 

$$
\begin{gathered}
    \textit{Predict step} \\
    \hline
    \mathbfcal{Y} = \mathbf{f(} \mathbfcal{X} \mathbf{)} \\
    \mathbf{\hat{x}} = \sum_{i=0}^{2L} \omega^m_i \mathbfcal{Y}_i \quad\quad
    \mathbf{\hat{P}} = \sum_{i=0}^{2L} \omega^c_i (\mathbfcal{Y}_i - \mathbf{x})(\mathbfcal{Y}_i - \mathbf{x})^T + \mathbf{Q}
\end{gathered}
$$ {#eq-ukf-predict}

By comparing the predicted measurements with the actual measurements, the UKF computes the Kalman gain, which determines the optimal blend between the predicted state and the measurement updates. Finally, the updated state estimate is obtained by incorporating the measurement information into the predicted state estimate using the Kalman gain. The update step of the UKF enables the filter to adaptively adjust the state estimate based on the measurements, providing a more 
accurate estimation of the system's true state.

$$
\begin{gathered}
    \textit{Update step} \\
    \hline
    \mathbfcal{Z} = \mathbf{h(} \mathbfcal{X} \mathbf{)} \\
    \mathbf{\mu}_z = \sum_{i=0}^{2L} \omega^m_i \mathbfcal{Z}_i \quad\quad
    \mathbf{P}_z = \sum_{i=0}^{2L} \omega^c_i (\mathbfcal{Z}_i - \mathbf{\mu}_z)(\mathbfcal{Z}_i - \mathbf{\mu}_z)^T + \mathbf{R} \\
    \mathbf{y} = \mathbf{z} - \mathbf{\mu}_z \qquad \mathbf{P}_{xz} = \sum_{i=0}^{2L} \omega_i^c (\mathbfcal{X}_i - \mathbf{x}) (\mathbfcal{Z}_i - \mathbf{\mu}_z)^T \\
    \mathbf{K} = \mathbf{P}_{xz} \mathbf{P}_z^{-1} \\
    \mathbf{\hat{x}} = \mathbf{x} + \mathbf{K} \mathbf{y} \qquad \mathbf{\hat{P}} = \mathbf{P} - \mathbf{K} \mathbf{P}_z \mathbf{K}^T
\end{gathered}
$$ {#eq-ukf-update}

The UKF has been shown to achieve higher accuracy and robustness than the extended Kalman filter (EKF) for various nonlinear estimation problems, such as state estimation, parameter estimation, and dual estimation [@882463].